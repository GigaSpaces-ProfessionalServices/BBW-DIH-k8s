apiVersion: apps/v1
kind: Deployment
metadata:
  name: flink-jobmanager
spec:
  replicas: {{ .Values.jobmanager.replicas }}
  selector:
    matchLabels:
      app: flink
      component: jobmanager
  template:
    metadata:
      labels:
        app: flink
        component: jobmanager
        deployment.affinity: {{ .Values.affinity.value }}
    spec:
      {{- include "di.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.global.minio.enabled }}
      serviceAccountName: {{ .Release.Name }}-minio-bucket-builder-sa
      {{- end }}
      initContainers:
        {{- if (include "flink.nodeLocalMode" .) }}
        - name: di-init-flink
          image: "{{ .Values.image.init.repository }}:{{ .Values.image.init.tag }}"
          volumeMounts:
            - name: flink
              mountPath: /flink
          command: [ "/bin/sh", "-c", "(mkdir -p {{.Values.highAvailability.mode.nodeLocal.checkpoints.dir }} {{.Values.highAvailability.mode.nodeLocal.savepoints.dir}} {{ .Values.highAvailability.mode.nodeLocal.storage.dir }} {{ .Values.highAvailability.mode.nodeLocal.storage.dir }}/job-result-store/{{.Values.highAvailability.clusterId}} && chmod 777 {{.Values.highAvailability.mode.nodeLocal.checkpoints.dir }} {{.Values.highAvailability.mode.nodeLocal.savepoints.dir}} {{ .Values.highAvailability.mode.nodeLocal.storage.dir }} {{ .Values.highAvailability.mode.nodeLocal.storage.dir }}/job-result-store/{{.Values.highAvailability.clusterId}})" ]
        {{- end }}
      {{- include "flink.initMinioContainer" . | nindent 8 }}
      containers:
        - name: jobmanager
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          lifecycle:
            postStart:
              exec:
                command: [ "/bin/sh", "-c", "./bin/sql-gateway.sh start -Dsql-gateway.endpoint.rest.address=localhost" ]
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            {{- if (include "flink.highAvailabilityMode" .) }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  {{- if .Values.global.minio.enabled }}
                  name: {{ .Values.global.minio.tenantName }}-user-1
                  optional: false
                  {{- else }}
                  name: {{ .Values.s3.secretName }}
                  optional: true
                  {{- end }}
                  {{- if .Values.global.minio.enabled }}
                  key: CONSOLE_ACCESS_KEY
                  {{- else }}
                  key: ACCESS_KEY
                  {{- end }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  {{- if .Values.global.minio.enabled }}
                  name: {{ .Values.global.minio.tenantName }}-user-1
                  optional: false
                  {{- else }}
                  name: {{ .Values.s3.secretName }}
                  optional: true
                  {{- end }}
                  {{- if .Values.global.minio.enabled }}
                  key: CONSOLE_SECRET_KEY
                  {{- else }}
                  key: SECRET_KEY
                  {{- end }}
            {{- end }}
            {{- if .Values.env.builtInPlugins }}
            - name: ENABLE_BUILT_IN_PLUGINS
              value: "{{ .Values.env.builtInPlugins }}-{{ .Chart.AppVersion }}.jar"
            {{- end }}
          # The following args overwrite the value of jobmanager.rpc.address configured in the configuration config map to POD_IP.
          args: [ "jobmanager","-D","jobmanager.rpc.address=$(POD_IP)" ]
          ports:
            - containerPort: 6123
              name: rpc
            - containerPort: 6124
              name: blob-server
            - containerPort: 8081
              name: webui
          livenessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 60
            periodSeconds: 60
          resources:
            requests:
              memory: {{ .Values.jobmanager.memoryRequestSize }}
          volumeMounts:
            - name: flink-config-volume
              mountPath: /opt/flink/conf
            {{- if (include "flink.nodeLocalMode" .) }}
            - name: flink
              mountPath: /flink
            {{- end }}
          securityContext:
            runAsUser: 9999  # refers to user _flink_ from official flink image, change if necessary
      volumes:
        {{- if (include "flink.nodeLocalMode" .) }}
        - name: flink
          persistentVolumeClaim:
            claimName: flink
        {{- end }}
        - name: flink-config-volume
          configMap:
            name: flink-config
            items:
              - key: flink-conf.yaml
                path: flink-conf.yaml
              - key: log4j-console.properties
                path: log4j-console.properties
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- include "flink.affinity" . | nindent 6 }}
