apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.network/docker-di: "true"
    io.kompose.service: iidr-kafka
  name: iidr-kafka
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: iidr-kafka
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.network/docker-di: "true"
        io.kompose.service: iidr-kafka
        {{- if .Values.affinity.enabled }}
        deployment.affinity: {{ .Values.affinity.value }}
        {{- end }}
      name: iidr-kafka
      namespace: {{ .Release.Namespace }}
    spec:
      containers:
        - env:
            - name: BOOTSTRAP_SERVERS
              value: "{{ .Values.global.kafkaHost }}:{{ .Values.global.kafkaPort }}"
            - name: PROPERTIES_MANAGER_PORT
              value: "{{ .Values.global.iidrKafkaPropertiesManagerPort }}"
            - name: IIDR_KAFKA_USER_EXIT_PROPERTIES_FILE_DIR
              value: "{{ .Values.envs.userExitPropertiesFileDir }}"
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          name: iidr-kafka
          lifecycle:
            postStart:
              exec:
                command: [ "/bin/sh", "-c", "(sudo mkdir -p $IIDR_KAFKA_USER_EXIT_PROPERTIES_FILE_DIR && sudo chown gsods:gsods $IIDR_KAFKA_USER_EXIT_PROPERTIES_FILE_DIR)" ]
          ports:
            - containerPort: {{ .Values.global.iidrKafkaPropertiesManagerPort }}
            - containerPort: 11701
          resources: {{ toYaml .Values.resources | nindent 12 }}
          stdin: true
          tty: true
          volumeMounts:
            - name: iidr-kafka
              mountPath: /iidr-kafka
      hostname: iidr-kafka
      restartPolicy: Always
      {{- include "di.imagePullSecrets" . | nindent 6 }}
      volumes:
        - name: iidr-kafka
          persistentVolumeClaim:
            claimName: iidr-kafka
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity.enabled }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: deployment.affinity
                    operator: In
                    values:
                      - {{ .Values.affinity.value }}
              topologyKey: "kubernetes.io/hostname"
      {{- end }}
status: { }
